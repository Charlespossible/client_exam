// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  role       Role      @default(USER)
  createdAt  DateTime  @default(now())
  exams      ExamResult[]
}

model Admin {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
}

model Exam {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  year        Int  
  subject     String  
  questions   Question[]
  results     ExamResult[]
  createdAt   DateTime @default(now())
}

model Question {
  id          Int      @id @default(autoincrement())
  text        String
  options     String[]
  correctAnswer String
  subject     String  
  examYear    Int  
  exam        Exam?   @relation(fields: [examId], references: [id])
  examId      Int?
  createdAt   DateTime @default(now())
}

model ExamResult {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  exam       Exam     @relation(fields: [examId], references: [id])
  examId     Int
  score      Int
  createdAt  DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}


